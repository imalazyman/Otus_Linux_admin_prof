# /roles/restore/tasks/prepare-restore.yml
---
- name: Debug actual execution context 2
  shell: |
    echo "Actual user: $(whoami)"
    echo "Effective user: $(id -un)"
    echo "SSH_AUTH_SOCK: $SSH_AUTH_SOCK"
    echo "HOME: $HOME"
    ls -la ~/.ssh/ || echo "No .ssh directory"
  register: context_debug2

- name: Show context debug 2
  debug:
    var: context_debug2.stdout_lines

- name: Get the latest timestamp from mysql backups
  shell: |
    ls -1 {{ backup_destination }}/mysql/ | grep "^2" | sort -r | head -1
  register: latest_timestamp
  when: restore_timestamp == "latest"
  changed_when: false
  tags:
    - restore-prepare
    - discovery

- name: Set timestamp
  set_fact:
    actual_timestamp: "{{ latest_timestamp.stdout | default(restore_timestamp) }}"
  tags:
    - restore-prepare
    - vars

- name: Verify timestamp exists
  stat:
    path: "{{ backup_destination }}/mysql/{{ actual_timestamp }}"
  register: timestamp_check
  tags:
    - restore-prepare
    - validation

- name: Fail if timestamp doesn't exist
  fail:
    msg: "Backup timestamp '{{ actual_timestamp }}' not found in {{ backup_destination }}/mysql/"
  when: not timestamp_check.stat.exists
  tags:
    - restore-prepare
    - validation

- name: Set backup path for db component
  set_fact:
    backup_path: "{{ backup_destination }}/mysql/{{ actual_timestamp }}/"
  when: restore_component == "db"
  tags:
    - restore-prepare
    - vars

- name: Set backup path for web component
  set_fact:
    backup_path: "{{ backup_destination }}/wordpress/{{ actual_timestamp }}/"
  when: restore_component == "web"
  tags:
    - restore-prepare
    - vars

- name: Set backup path for monitoring component
  set_fact:
    backup_path: "{{ backup_destination }}/monitoring/{{ actual_timestamp }}/"
  when: restore_component == "monitoring"
  tags:
    - restore-prepare
    - vars

- name: Set backup path for full restore
  set_fact:
    backup_path: "{{ backup_destination }}/"
  when: restore_component == "full"
  tags:
    - restore-prepare
    - vars

- name: Show detailed restore information
  debug:
    msg: |
      ðŸ“‹ RESTORE CONFIGURATION
      ========================
      Component: {{ restore_component }}
      Requested timestamp: {{ restore_timestamp }}
      Actual timestamp: {{ actual_timestamp }}
      Backup path: {{ backup_path }}
      Dry run mode: {{ dry_run }}

      ðŸ“Š BACKUP STATUS
      ================
      Latest backup found: {{ latest_timestamp.stdout | default('N/A') }}
      Timestamp exists: {{ timestamp_check.stat.exists | default(false) }}
      Backup destination: {{ backup_destination }}

      ðŸŽ¯ OPERATION
      ============
      Will restore {{ restore_component }} from:
      {{ backup_path }}
  tags:
    - restore-prepare
    - info

- name: Show final restore info
  debug:
    msg: "Will restore {{ restore_component }} from {{ backup_path }} (timestamp: {{ actual_timestamp }})"
  tags:
    - restore-prepare
    - info

- name: Debug actual execution context 3
  shell: |
    echo "Actual user: $(whoami)"
    echo "Effective user: $(id -un)"
    echo "SSH_AUTH_SOCK: $SSH_AUTH_SOCK"
    echo "HOME: $HOME"
    ls -la ~/.ssh/ || echo "No .ssh directory"
  register: context_debug3

- name: Show context debug 3
  debug:
    var: context_debug3.stdout_lines